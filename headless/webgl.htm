<!DOCTYPE html>
<html lang="en">
   <head>
      <title>Testing of WebGLRenderer</title>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
      <style>
         body {
            font-family: Monospace;
            margin: 0px;
            overflow: hidden;
         }
         #main {
            position: absolute;
            left: 5px;
            right: 5px;
            top: 5px;
            bottom: 5px;
         }
      </style>
      
      <script src="https://threejs.org/build/three.js" type="text/javascript"></script>
      
   </head>
   <body>
      <div id="main"></div>

      <script>

         var geom_size = 100;

         var container = document.getElementById('main');
         // document.body.appendChild(container);

         var camera = new THREE.PerspectiveCamera(45,
                         window.innerWidth / window.innerHeight, 1,
                           geom_size * 100);
         camera.position.x = 7 * geom_size;
         camera.position.y = 7 * geom_size;
         camera.up = new THREE.Vector3(0, 0, 1);

         var scene = new THREE.Scene();
         scene.add(new THREE.AmbientLight(0x404040));

         var light = new THREE.DirectionalLight(0xffffff);
         light.position.set(0, 1, 0);
         scene.add(light);

         var geom = new THREE.TorusKnotGeometry(geom_size * 2,
                       geom_size / 2, 50, 50, 2, 3);
         var material = new THREE.MeshLambertMaterial({
                        color : 'blue',
                        side : THREE.DoubleSide
                     });
          var mesh = new THREE.Mesh(geom, material);

          console.log('nfaces', geom.faces.length);

          scene.add(mesh);

          camera.lookAt(scene.position);
          
          var renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });
          
          // renderer.setPixelRatio( window.devicePixelRatio );

          renderer.setSize(window.innerWidth, window.innerHeight);

          container.appendChild(renderer.domElement);
          
          renderer.render(scene, camera);

          function onWindowResize() {

               console.log('Resize', window.innerWidth,  window.innerHeight);

               camera.aspect = window.innerWidth / window.innerHeight;
               camera.updateProjectionMatrix();

               renderer.setSize(window.innerWidth, window.innerHeight);

               renderer.render(scene, camera);
           }

         </script>

   </body>
</html>
